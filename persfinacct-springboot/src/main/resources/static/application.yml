logging:
  level:
    org:
      springframework:
        web: ${config.logging.level.springframework:INFO}
    com:
      esrx:
        services: ${config.logging.level.services:DEBUG}

management:
  endpoints:
    web:
      base-path: /management
  endpoint:
    health:
      show-details: ${config.management.endpoint.health.show-defails:ALWAYS}
  metrics:
    export:
      graphite:
        host: ${config.metrics.export.graphite.host:nonprodgraphite.express-scripts.com}
        port: ${config.metrics.export.graphite.port:2114}

springfox:
  documentation:
    swagger:
      v2:
        path: /api-docs

com:
  esrx:
    app:
      name: ${spring.application.name}
      version: ${spring.application.version}
      monitoring:
        instanceId: ${vcap.application.instance_index:0}
        name: ${spring.application.name}
        version: ${spring.application.version}
        organization: ${config.com.esrx.app.monitoring.organization:platform}
        region: ${config.com.esrx.app.monitoring.region:ch3pcf01}
        environment: ${config.com.esrx.app.monitoring.environment:local}
        system:
          metrics:
            enabled: ${config.com.esrx.app.monitoring.system.metrics:true}
        client:
          enabled: true
      security:
        jwt:
          tokenEncryptionKey: ${vcap.services.authinator.credentials.authService.token.encryptionKey:test}
    pfa:
      api:
        kafkaKrbConfFile: ./config/dev/krb5.conf
        jaasConfigFile: ./config/dev/devpkafka_jaas.conf
        trust-store-file: ./config/dev/truststore.jks

error:
  code:
    enabled: false

include:
  headers: ESRX-REQUEST-ID

mongo:
  ssl:
    enabled: true
  dbName: account_api_user
  key-store-file-name: mongokeystore.jks

spring:
  #spring data mongo
  data:
    mongodb:
      uri: mongodb://account_api_user:${mongo.dbPassword}@ch3dr615796.express-scripts.com:27017,ch3dr615795.express-scripts.com:27017/peppfact?replicaSet=rs-dv-peppfact01
      database: peppfact
      repositories:
        type: auto
  mvc:
    servlet:
      path: /
  main:
    allow-bean-definition-overriding: true
  jackson:
    default-property-inclusion: NON_NULL
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration
      - org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration
  cloud:
    stream:
      bindings:
        pfaSync:
          destination: ${messaging.destination2}
          group: ${messaging.destination1}
          consumer:
            header-mode: raw
            partitioned: true
            auto-startup: true
        pfaLatest:
          destination: ${messaging.destination3}
          producer:
            header-mode: raw
        change:
          destination: ${messaging.destination4}
          producer:
            header-mode: raw
      kafka:
        binder:
          brokers: ${cloud.kafka.slueth.binder.brokers}
          autoCreateTopics: false
          autoAddPartitions: false
          configuration:
            security:
              protocol: SASL_SSL
            sasl:
              mechanism: GSSAPI
              kerberos:
                service:
                  name: ${cloud.sasl.kerberos.service.name}
            ssl:
              truststore:
                location: ${cloud.kafka.ssl.truststore.location}
                password: ${cloud.kafka.ssl.truststore.password}
            auto:
              offset:
                reset: latest
        bindings:
          output:
            producer:
              message-key-expression: headers.partitionKey
              compressionType: snappy

#oauth:
#  consumer:
#    requestTokenURL: https://api-dev.express-scripts.io/v1/auth/oauth/requestTokens
#    accessTokenURL: https://api-dev.express-scripts.io/v1/auth/oauth/accessTokens
#    consumerkey:
#    secret:


---

spring:
  profiles: dev
  data:
    mongodb:
      uri: mongodb://account_api_user:${mongo.dbPassword}@ch3dr615796.express-scripts.com:27017,ch3dr615795.express-scripts.com:27017/peppfact?replicaSet=rs-dv-peppfact01
mongo:
  env: dev

com:
  esrx:
    pfa:
      api:
        kafkaKrbConfFile: ./config/dev/krb5.conf
        jaasConfigFile: ./config/dev/devpkafka_jaas.conf
        trust-store-file: ./config/dev/truststore.jks
management:
  metrics:
    export:
      graphite:
        host: nonprodgraphite.express-scripts.com
        port: 2114

---

spring:
  profiles: qa
  data:
    mongodb:
      uri: mongodb://account_api_user:${mongo.dbPassword}@ch3qr616092.express-scripts.com:27017,ch3qr616093.express-scripts.com:27017/peppfact?replicaSet=rs-qa-peppfact01

mongo:
  env: qa

com:
  esrx:
    pfa:
      api:
        kafkaKrbConfFile: ./config/qa/krb5.conf
        jaasConfigFile: ./config/qa/qakafka_jaas.conf
        trust-store-file: ./config/qa/kafka.truststore.jks

---

spring:
  profiles: uat
  data:
    mongodb:
      uri: mongodb://account_api_user:${mongo.dbPassword}@ch3ur616092.express-scripts.com:27017,ch3ur616093.express-scripts.com:27017/peppfact?replicaSet=rs-uat-peppfact01

mongo:
  env: uat

com:
  esrx:
    pfa:
      api:
        kafkaKrbConfFile: ./config/uat/krb5.conf
        jaasConfigFile: ./config/uat/uatkafka_jaas.conf
        trust-store-file: ./config/uat/kafka.truststore.jks